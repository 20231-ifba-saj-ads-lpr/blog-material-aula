import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as m,c as k,d as s,w as e,a as n,b as a,e as o}from"./app-06239210.js";const v={},f=o(`<h1 id="condicionais" tabindex="-1"><a class="header-anchor" href="#condicionais" aria-hidden="true">#</a> Condicionais</h1><p><sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup> <sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup> <sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></p><p>Na programação estruturada, as instruções são executadas de forma sequencial. Em muitas situações, é necessário realizar uma verificação e analisar o resultado para determinar qual caminho seguir, o que é conhecido como desvio de fluxo.</p><p>Por exemplo, quando compramos um carro, a taxa de juros pode ser diferente dependendo do valor da entrada. Da mesma forma, quando precisamos decidir se um aluno está aprovado, reprovado ou em exame com base em sua média escolar.</p><p>Não podemos tratar essas situações apenas com os conceitos básicos de variáveis, tipos de variáveis, constantes, comando de atribuição, entrada e saída de dados. É necessário utilizar estruturas que nos permitam impor condições para a execução de instruções específicas ou criar condições que possibilitem o desvio do fluxo do programa.</p><div class="hint-container tip"><p class="hint-container-title">Condição</p><p>Por condição entende-se qualquer expressão que tenha como resultado uma valor <code>verdadeiro</code> ou <code>falso</code>.</p></div><p>Uma condição em um programa pode conter expressões relacionais usando os operadores de comparação (&gt; ,&lt;, &gt;=, &lt;=, ==, !=), que resultam em um valor booleano (verdadeiro ou falso). Além disso, as condições podem conter expressões booleanas mais complexas, que combinam múltiplas expressões relacionais e operadores lógicos (AND, OR, NOT) para avaliar se a condição é verdadeira ou falsa.</p><h2 id="estrutura" tabindex="-1"><a class="header-anchor" href="#estrutura" aria-hidden="true">#</a> Estrutura</h2><p><sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup></p><div class="hint-container tip"><p class="hint-container-title">Dicas</p><p>A estrutura que permite desviar fluxo do programa é denominada de estrutura condicional, estrutura de seleção ou estrutura de controle</p></div><figure><img src="https://www.plantuml.com/plantuml/svg/ZL4zJyCm4DtpAqwUWP81biXL9bY00TYY3YQ-DgSwFiisNwhwQ_Wf_37iEeswLCBBdT-zz-xERaDKFhwFfchdJDF6ApV0FUmgo6UnA43dbTrgylBX6Inh3EZazTKDP7ZALqsHJ8B_iO8pP358zd7WYzawyQh28qjTYDy6fI3xGK4S3Vgw2uDoA3MfaQq6ezxGIF682O2bX5i1HRWcOr133ZqRzb9evRUSXjgWW3NREC6V0qKyQV3gwdEzxywLvgalbtrTBhkyFaW8QiGcQPk3y_vebOcvqrTPu8N6rMafTogLfzyVJi-ohrgq-l1l9Vu1" alt="uml diagram"><figcaption>Representação da tomada de decisão </figcaption></figure><figure><img src="https://www.plantuml.com/plantuml/svg/lPIzRjim481tFGMXgK7ZE1BGBWODTqbH8DMGTdCzqEB9keRY4IJzamHvcivzYhnOAKiK720saWmL88Yul-zuFvevBwnVDogP3IU9AojCpRwoXuIrptZS2UPMw5k9bb_VC4qI71X-UV69jUB-l9XqBht3wwoSKQZ1SRA-flCXTB1BEZlKE7UrCC11AJGEc19BK3pzfdyz_IsHKiQSlrF0ArGA96i_9IcoFDLYSvUoYhJl1TiQFQGn1PFraL5lV4W7xd7TnF15TbxawT7G9LbTATg2NQerl01XMvI-vjb57jns81tU0z_Z1dpUuvUqYzG690h6sOSY-rZaP-CJ6JWFe8x08wACDmnH6z8oOhxlCLFEFX-FBuMzfT2urMd0pw6AHbWHWYWAhHtA-CLOsWX9npaLMN1-PG7qkyfOPbUdKxY1_v33Rq8TamX77-7fMuUJzRJBPpHlry0YhSBcvPMumkRzsp2issXgil3cescP7LvlD0tWJl3GBdGOKoSQc0JrP3y7Zz6wzMpdOjVbzGERnQ6gxLUdAPx-qE9WabfjYpheR1JDIz8kR6ceBQ-4Sh187fCPQBd_WNNVVm00" alt="uml diagram"><figcaption>Exemplo de Fluxograma</figcaption></figure><h2 id="comando-if" tabindex="-1"><a class="header-anchor" href="#comando-if" aria-hidden="true">#</a> Comando IF</h2><p>O comando if é utilizado sempre que é necessário escolher entre dois caminhos dentro do programa ou quando se deseja executar um ou mais comandos que estejam sujeitos ao resultado de um teste. A forma geral de um comando if é:</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">if</span><span class="token punctuation">(</span>condição<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    sequência de comandos<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Na execução do comando if a condição será avaliada e:</p><ul><li>Se a condição for <strong>verdadeira</strong>, a sequência de comandos será executada.</li><li>Se a condição for <strong>falsa</strong>, a sequência de comandos não será executada, e o progra-ma continuará a partir do primeiro comando seguinte ao final do comando if.</li></ul><figure><img src="https://www.plantuml.com/plantuml/svg/dPF1JiCm38RlVGghPpQj84vJffr0d3Xm73jaZRiQahWaAGEcFH9FmOkHhiqO4aE2IbNSrlRdttRdFaWNMgEp-S5Ij7QogU4QjXbqL_-uiApGOoCcuqjmqZuEzdBwpSitcYnwmIxKV0P7GSkiToHB2r_B1WLgJOr7q7A5MkGtzlxZlIJE0NnurIWgqXeLT4V9cft8hNn-pQ5Y6uONcve2vgc6fXWoatqEiHvyezQazBOr-Sd49JjRQTwWM-aMVq30XbIeHH63Nb1vUaEnHoLqcT2Af66hZgWmWs9o6gsaU-JOq3N-egmi3jeQwMJCeJbs_23k5Y887GE2aSGE5CDJYx-2AtRemzeXsjE2BquBVc2ogQPeXbHB_jVnmS2QZC-FQC75-XEj8lFpqboH-V--71PoD6kAqQpStvsiqIm2-w_RRjT1W9S6fr7rj1l5BlMW2uYJUUchkIEp_9fNIhOesVguZh55efBQu-2JxR8vMhN_-_hp4m00" alt="uml diagram"><figcaption>Fluxograma para um programa verificar se um número e maior do que 10</figcaption></figure>`,18),b=n("div",{class:"language-c line-numbers-mode","data-ext":"c"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),a(),n("span",{class:"token string"},"<stdio.h>")]),a(`
`),n("span",{class:"token keyword"},"int"),a(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"int"),a(" num"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token function"},"printf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Digite um numero: \\n"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token function"},"scanf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"%d"'),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"&"),a("num"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),a("num "),n("span",{class:"token operator"},">"),a(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token function"},"printf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"O numero e maior do que 10"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`        
    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[a("java"),n("span",{class:"token punctuation"},"."),a("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Scanner")]),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token keyword"},"public"),a(),n("span",{class:"token keyword"},"class"),a(),n("span",{class:"token class-name"},"Programa"),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"public"),a(),n("span",{class:"token keyword"},"static"),a(),n("span",{class:"token keyword"},"void"),a(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),a(" args"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token class-name"},"Scanner"),a(" teclado "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Scanner"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),a("in"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token keyword"},"int"),a(" num"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),a("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Digite um numero: "'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        num `),n("span",{class:"token operator"},"="),a(" teclado"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"nextInt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),a("num "),n("span",{class:"token operator"},">"),a(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),a(`
            `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),a("out"),n("span",{class:"token punctuation"},"."),a("println "),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"O numero e maior do que 10"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token punctuation"},"}"),a(`        
    `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g={href:"https://www.online-ide.com/5uY1EZCXoQ",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.online-java.com/bvmuJ67XNG",target:"_blank",rel:"noopener noreferrer"},x=o(`<h3 id="decisao-composta" tabindex="-1"><a class="header-anchor" href="#decisao-composta" aria-hidden="true">#</a> Decisão composta</h3><p>Ocorre quando duas alternativas dependem da mesma condição.</p><p>Formato padrão</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>condição<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    comandos
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    outros comandos
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>exemplo:</p>`,5),_=n("div",{class:"language-c line-numbers-mode","data-ext":"c"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("media "),n("span",{class:"token operator"},">="),a(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token function"},"printf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Aprovado \\n"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token function"},"printf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Reprovado \\n"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("media "),n("span",{class:"token operator"},">="),a(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),a("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Aprovado"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),a("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Reprovado"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=o(`<h3 id="decisao-multipla" tabindex="-1"><a class="header-anchor" href="#decisao-multipla" aria-hidden="true">#</a> Decisão múltipla</h3><p>Ocorre quando um conjunto de valores discretos precisa ser testado e ações diferentes são associadas a esses valores. Formato padrão:</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>condição<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> x<span class="token operator">:</span> 
        <span class="token function">comando</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>EXEMPLO:</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>var<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> 
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Opção 1 foi selecionada&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
   <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> 
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Opção 2 foi selecionada&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
   <span class="token keyword">default</span><span class="token operator">:</span> 
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Nenhuma opção selecionada&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exercicios" tabindex="-1"><a class="header-anchor" href="#exercicios" aria-hidden="true">#</a> Exercícios</h2>`,6),A=o('<h2 id="referencias" tabindex="-1"><a class="header-anchor" href="#referencias" aria-hidden="true">#</a> Referências</h2><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>Linguagem C - Completa e Descomplicada Capa comum, 2018, André Backes <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>Algoritmos e programação em linguagem C, 2013, Renato Soffner <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li><li id="footnote3" class="footnote-item"><p>ALGORITMOS E LÓGICA DE PROGRAMAÇÃO I - Professora Me. Gislaine Camila Lapasini Leal - Unicesumar. <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p></li><li id="footnote4" class="footnote-item"><p>Manzano, J. and Oliveira, J., 2005. Algoritmos. 17th ed. São Paulo (SP): Érica. <a href="#footnote-ref4" class="footnote-backref">↩︎</a></p></li></ol></section>',3);function E(j,R){const p=l("Tabs"),u=l("ExternalLinkIcon"),r=l("RouterLink");return m(),k("div",null,[f,s(p,{id:"65",data:[{title:"c",id:"c"},{title:"java",id:"java"}],"tab-id":"if"},{tab0:e(({title:t,value:c,isActive:i})=>[b]),tab1:e(({title:t,value:c,isActive:i})=>[h]),_:1}),n("p",null,[n("a",g,[a("Run C"),s(u)]),a(),n("a",w,[a("Run Java"),s(u)])]),x,s(p,{id:"89",data:[{title:"c",id:"c"},{title:"java",id:"java"}],"tab-id":"cond"},{tab0:e(({title:t,value:c,isActive:i})=>[_]),tab1:e(({title:t,value:c,isActive:i})=>[q]),_:1}),y,n("p",null,[s(r,{to:"/posts/exercicios/02_condicional.html"},{default:e(()=>[a("Exercício")]),_:1})]),A])}const O=d(v,[["render",E],["__file","05_condicional.html.vue"]]);export{O as default};
