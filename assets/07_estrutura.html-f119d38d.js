import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-27dd0239.js";const p={},e=t(`<h1 id="estruturas-tipo-definido-pelo-programador" tabindex="-1"><a class="header-anchor" href="#estruturas-tipo-definido-pelo-programador" aria-hidden="true">#</a> Estruturas (Tipo definido pelo programador)</h1><p>exemplo de c√≥digo</p><p>Escrevendo data</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>

<span class="token keyword">struct</span> <span class="token class-name">data</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> dia<span class="token punctuation">;</span>
    <span class="token keyword">int</span> mes<span class="token punctuation">;</span>
    <span class="token keyword">int</span> ano<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">data</span> <span class="token function">criaData</span><span class="token punctuation">(</span><span class="token keyword">int</span> dia<span class="token punctuation">,</span> <span class="token keyword">int</span> mes<span class="token punctuation">,</span> <span class="token keyword">int</span> ano<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">data</span> novaData<span class="token punctuation">;</span>
    novaData<span class="token punctuation">.</span>dia <span class="token operator">=</span> dia<span class="token punctuation">;</span>
    novaData<span class="token punctuation">.</span>mes <span class="token operator">=</span> mes<span class="token punctuation">;</span>
    novaData<span class="token punctuation">.</span>ano <span class="token operator">=</span> ano<span class="token punctuation">;</span>
    <span class="token keyword">return</span> novaData<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">escrevaData</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">data</span> d<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d/%d/%d&quot;</span><span class="token punctuation">,</span>d<span class="token punctuation">.</span>dia<span class="token punctuation">,</span> d<span class="token punctuation">.</span>mes<span class="token punctuation">,</span>d<span class="token punctuation">.</span>ano<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">char</span><span class="token operator">*</span> <span class="token function">stringData</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">data</span> d<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">char</span><span class="token operator">*</span> string<span class="token punctuation">;</span>
    <span class="token function">sprintf</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span><span class="token string">&quot;%d/%d/%d&quot;</span><span class="token punctuation">,</span>d<span class="token punctuation">.</span>dia<span class="token punctuation">,</span> d<span class="token punctuation">.</span>mes<span class="token punctuation">,</span>d<span class="token punctuation">.</span>ano<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">data</span> inicio<span class="token punctuation">,</span> fim<span class="token punctuation">;</span>
    inicio <span class="token operator">=</span> <span class="token function">criaData</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2020</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fim <span class="token operator">=</span> <span class="token function">criaData</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2022</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;inicio %s e fim %s&quot;</span><span class="token punctuation">,</span> <span class="token function">stringData</span><span class="token punctuation">(</span>inicio<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">stringData</span><span class="token punctuation">(</span>fim<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>comparando data</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token comment">//estrutura para armazenar uma data (dd/mm/yyyy)</span>
<span class="token keyword">struct</span> <span class="token class-name">data</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> dia<span class="token punctuation">;</span>
    <span class="token keyword">int</span> mes<span class="token punctuation">;</span>
    <span class="token keyword">int</span> ano<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">maiorData</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">data</span> data1<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">data</span> data2<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//7/6/2023 -&gt; 20230000 + 600 + 7</span>
    <span class="token keyword">int</span> intData1 <span class="token operator">=</span>  <span class="token punctuation">(</span>data1<span class="token punctuation">.</span>ano <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>data1<span class="token punctuation">.</span>mes <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">+</span> data1<span class="token punctuation">.</span>dia<span class="token punctuation">;</span>
    <span class="token keyword">int</span> intData2 <span class="token operator">=</span>  <span class="token punctuation">(</span>data2<span class="token punctuation">.</span>ano <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>data2<span class="token punctuation">.</span>mes <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">+</span> data2<span class="token punctuation">.</span>dia<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>intData1 <span class="token operator">&gt;</span> intData2<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>   
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">struct</span> <span class="token class-name">data</span> <span class="token function">novaData</span><span class="token punctuation">(</span><span class="token keyword">int</span> dia<span class="token punctuation">,</span> <span class="token keyword">int</span> mes<span class="token punctuation">,</span> <span class="token keyword">int</span> ano<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">data</span> dataTemp<span class="token punctuation">;</span>
    dataTemp<span class="token punctuation">.</span>dia <span class="token operator">=</span> dia<span class="token punctuation">;</span>   
    dataTemp<span class="token punctuation">.</span>mes <span class="token operator">=</span> mes<span class="token punctuation">;</span>
    dataTemp<span class="token punctuation">.</span>ano <span class="token operator">=</span> ano<span class="token punctuation">;</span>
    <span class="token keyword">return</span> dataTemp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;compara datas %d \\n&quot;</span><span class="token punctuation">,</span> <span class="token function">maiorData</span><span class="token punctuation">(</span>
        <span class="token function">novaData</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2022</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">novaData</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","07_estrutura.html.vue"]]);export{r as default};
