import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e as t}from"./app-f39080b8.js";const p={},e=t(`<h1 id="exercicio-09-matriz-02" tabindex="-1"><a class="header-anchor" href="#exercicio-09-matriz-02" aria-hidden="true">#</a> Exercício 09 Matriz 02</h1><ol><li><p>Faça um programa que leia uma palavra de 10 letras e transforme todos os caracteres para maiúsculo.</p><details class="hint-container details"><summary>Detalhe</summary><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token comment">//Faça um programa que leia uma palavra de 10 letras e transforme todos os caracteres para maiúsculo.</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> tamanho <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> palavra<span class="token punctuation">[</span>tamanho<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Digite uma palavra de no maximo 10 caracteres\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%10[^\\n]&quot;</span><span class="token punctuation">,</span> palavra<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//ler espaço em branco</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tamanho<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                
        <span class="token keyword">if</span><span class="token punctuation">(</span>palavra<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token number">97</span> <span class="token operator">&amp;&amp;</span> palavra<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//a-z</span>
            palavra<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> palavra<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">32</span><span class="token punctuation">;</span><span class="token comment">//a-&gt;A...</span>
        <span class="token punctuation">}</span>               
    <span class="token punctuation">}</span>    
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Uppercase :%s&quot;</span><span class="token punctuation">,</span> palavra<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></li></ol>`,2),o=[e];function c(i,l){return a(),s("div",null,o)}const k=n(p,[["render",c],["__file","10_matriz_uppercase.html.vue"]]);export{k as default};
